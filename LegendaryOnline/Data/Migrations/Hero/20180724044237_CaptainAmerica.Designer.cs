// <auto-generated />
using LegendaryOnline.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LegendaryOnline.Data.Migrations.Hero
{
    [DbContext(typeof(HeroDbContext))]
    [Migration("20180724044237_CaptainAmerica")]
    partial class CaptainAmerica
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("hero")
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LegendaryOnline.Data.Heroes.Hero", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Hero");

                    b.HasData(
                        new { ID = 1, Name = "Captain America" }
                    );
                });

            modelBuilder.Entity("LegendaryOnline.Data.Heroes.HeroCard", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseAttack");

                    b.Property<int>("BaseRecruit");

                    b.Property<int>("Class");

                    b.Property<int>("Cost");

                    b.Property<int>("HeroID");

                    b.Property<string>("ImagePath");

                    b.Property<string>("Name");

                    b.Property<int>("Team");

                    b.HasKey("ID");

                    b.HasIndex("HeroID");

                    b.ToTable("HeroCard");

                    b.HasData(
                        new { ID = 1, BaseAttack = 0, BaseRecruit = 0, Class = 4, Cost = 3, HeroID = 1, ImagePath = "core/captain/aa.jpg", Name = "Avengers Assemble!", Team = 2 },
                        new { ID = 2, BaseAttack = 0, BaseRecruit = 0, Class = 2, Cost = 4, HeroID = 1, ImagePath = "core/captain/pt.jpg", Name = "Perfect Teamwork", Team = 2 },
                        new { ID = 3, BaseAttack = 4, BaseRecruit = 0, Class = 16, Cost = 6, HeroID = 1, ImagePath = "core/captain/db.jpg", Name = "Diving Block", Team = 2 },
                        new { ID = 4, BaseAttack = 3, BaseRecruit = 0, Class = 8, Cost = 7, HeroID = 1, ImagePath = "core/captain/aduao.jpg", Name = "A Day Unlike Any Other", Team = 2 }
                    );
                });

            modelBuilder.Entity("LegendaryOnline.Data.Heroes.HeroCardClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("HeroClass");
                });

            modelBuilder.Entity("LegendaryOnline.Data.Heroes.HeroCardTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Team");

                    b.HasKey("Id");

                    b.ToTable("HeroTeam");
                });

            modelBuilder.Entity("LegendaryOnline.Data.Heroes.HeroCard", b =>
                {
                    b.HasOne("LegendaryOnline.Data.Heroes.Hero", "Hero")
                        .WithMany("HeroCards")
                        .HasForeignKey("HeroID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
